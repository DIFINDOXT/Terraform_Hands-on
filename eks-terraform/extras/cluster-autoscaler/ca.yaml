apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-autoscaler
  namespace: kube-system
  labels:
    app.kubernetes.io/name: cluster-autoscaler
    app.kubernetes.io/part-of: cluster-autoscaler
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::--------------:role/EKS-ClusterAutoscaler-Role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-autoscaler
rules:
  - apiGroups: [""]
    resources: ["events","endpoints"]
    verbs: ["create","patch","update"]
  - apiGroups: [""]
    resources: ["pods","services","replicationcontrollers","persistentvolumeclaims","persistentvolumes"]
    verbs: ["list","watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list","watch","get","update"]
  - apiGroups: ["apps"]
    resources: ["statefulsets","replicasets","daemonsets","deployments"]
    verbs: ["list","watch"]
  - apiGroups: ["autoscaling.k8s.io"]
    resources: ["verticalpodautoscalers"]
    verbs: ["list","watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create","get","list","watch","update","patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes","storageclasses","csistoragecapacities"]
    verbs: ["list","watch"]
  - apiGroups: ["batch","extensions"]
    resources: ["jobs"]
    verbs: ["list","watch"]
  - apiGroups: ["autoscaling"]
    resources: ["replicasets","horizontalpodautoscalers"]
    verbs: ["list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-autoscaler
  namespace: kube-system
  labels:
    app.kubernetes.io/name: cluster-autoscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-autoscaler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cluster-autoscaler
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      serviceAccountName: cluster-autoscaler
      priorityClassName: system-cluster-critical
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: cluster-autoscaler
          image: registry.k8s.io/autoscaling/cluster-autoscaler:v1.29.0
          command:
            - ./cluster-autoscaler
            - --cloud-provider=aws
            - --cluster-name=shubhxt-eks-pf2ir9
            - --balance-similar-node-groups
            - --skip-nodes-with-local-storage=false
            - --stderrthreshold=info
            - --v=4
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
          env:
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: kube-system
                  key: aws-region
                  optional: true
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
      volumes:
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs/ca-certificates.crt
            type: FileOrCreate
